#!/usr/bin/env node
var optimist = require('optimist');
var parsePackageJson = require('../lib/parse-package-json');
var path = require('path');
var Dredd = require('../lib/dredd');

var version = parsePackageJson(path.join(__dirname, '../package.json'));

var argv = optimist
    .usage("Usage: \n  dredd <path to blueprint> <api_endpoint> [OPTIONS]" +
    "\n\nExample: \n  " + "dredd ./apiary.md http://localhost:3000 --dry-run")
    .options(Dredd.options)
    .wrap(80)
    .argv;

var argError = false;

if (argv.help === true) {
  optimist.showHelp(fn=console.error);
  process.exit(0);
}

if (argv.version === true) {
  console.log(version);
  process.exit(0);
}

if (argv._[0] === undefined) {
  console.error("Error: Must specify path to blueprint file.");
  argError = true;
}
if (argv._[1] === undefined) {
  console.error("Error: Must specify api endpoint.");
  argError = true;
}
if (argError) {
  console.error("\n");
  optimist.showHelp(fn=console.error);
  process.exit(1);
}

configuration = {
  'server': argv._[1],
  'options': argv
};

configuration.options.path.push(argv._[0]);

dredd = new Dredd(configuration);

process.on( 'SIGINT', function() {
  console.log( "\nShutting down from SIGINT (Ctrl-C)" );
  dredd.transactionsComplete(function() {
    process.exit(0);
  });
});

dredd.run(function(error, stats){
  if (error) {
    if (error.message) {
      console.error(error.message);
    }
    if (error.stack) {
      console.error(error.stack);
    }
    process.exit(1);
  }
  if (stats.failures + stats.errors > 0) {
    process.exit(1);
  } else {
    process.exit(0);
  }
});
